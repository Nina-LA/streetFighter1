var game = null;
var INTRO = "intro";
var ATLAS = "atlas";
var HERO_ANIMATION = "heroAnimation";
var HERO_ANIMATION_BACK = "heroAnimationBack";
var WALL_ANIMATION = "wallAnimation";
var PUNCH_WALL = "punchWall";

////////////////////////////////////////////////////////////////////////////////////   GAME ASSETS

var Assets = function Assets(audio){
  this.ATLAS_GAME = "assets/streetFighter1.png";
  this.ATLAS_JSON_HASH_GAME = "assets/streetFighter1.json";
  this.SOUND_PUNCH_WALL = "sound/punchWall.mp3";
  
  game.load.atlas(ATLAS, this.ATLAS_GAME,  this.ATLAS_JSON_HASH_GAME , Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);    
  game.load.audio(PUNCH_WALL,this.SOUND_PUNCH_WALL );

  this.audio = audio;
};

Assets.prototype.constructor = Assets;

Assets.prototype = {
  create: function(){
    this.audio.create();
  }
};

////////////////////////////////////////////////////////////////////////////////////   GAME AUDIO

var Audio = function Audio(){
  this.getEffect = function(){ return this.punchWall; };
  this.setEffect = function(punchWall){ this.punchWall = punchWall; };
};

Audio.prototype.constructor = Audio;

Audio.prototype = {
  play: function (){
    this.getEffect().play();
  },
  create: function (){
    this.setEffect(game.add.audio(PUNCH_WALL));
  }
};


////////////////////////////////////////////////////////////////////////////////////   BACKGROUND LOGO

var Logo = function Logo(){
   this.LOGO = "logo.png";
   this.getSprite = function(){ return this.sprite; };
   this.setSprite = function(sprite){ this.sprite = sprite; };
};

Logo.prototype.constructor = Logo;

Logo.prototype = {
  create: function() {
     var sprite = game.add.sprite(0,0,ATLAS, this.LOGO);
     sprite.anchor.set(0.5);
     sprite.visible = false;

     this.setSprite(sprite);
  },
  animation : function(resolved){
    var sprite = this.getSprite();

     var tweenPositionLogo_01 = game.add.tween(sprite)
                                  .to(
                                      { x: game.world.centerX-10, y :game.world.centerY }, 
                                      10, 
                                      Phaser.Easing.Linear.None,
                                      true,
                                      1200
                                    );

      tweenPositionLogo_01.onComplete.addOnce(function(_logo){
            sprite.scale.setTo(0.4);
            tweenPositionLogo_01.stop();
            game.tweens.remove(tweenPositionLogo_01);

            tweenPositionLogo_02.start();
      }, this);


      var tweenPositionLogo_02 = game.add.tween(sprite)
                                  .to(
                                      { x: game.world.centerX, y :game.world.centerY-sprite.height }, 
                                      10, 
                                      Phaser.Easing.Linear.None,
                                      false,
                                      600
                                    );

      tweenPositionLogo_02.onComplete.addOnce(function(_logo){
            sprite.scale.setTo(0.9);
            tweenPositionLogo_02.stop();
            game.tweens.remove(tweenPositionLogo_02);

            tweenPositionLogo_03.start();

      }, this);


      var tweenPositionLogo_03 = game.add.tween(sprite)
                                  .to(
                                      { x: game.world.centerX, y :game.world.centerY - 110 }, 
                                      5, 
                                      Phaser.Easing.Linear.None,
                                      false,
                                      600
                                    );

      tweenPositionLogo_03.onComplete.addOnce(function(_logo){
            sprite.scale.setTo(1.1);
            tweenPositionLogo_03.stop();
            game.tweens.remove(tweenPositionLogo_03);

            resolved("");

      }, this);
  }
};

////////////////////////////////////////////////////////////////////////////////////   BACKGROUND HERO

var Hero = function Hero(){
  this.getSprite = function(){ return this.sprite; };
  this.setSprite = function(sprite){ this.sprite = sprite; };

  this.getAnimation = function(){ return this.animation; };
  this.setAnimation = function(animation){ this.animation = animation; };

  this.getAnimationBack = function(){ return this.animationBack; };
  this.setAnimationBack = function(animationBack){ this.animationBack = animationBack; };

  this.getPromise = function(){ return this.promise; };
  this.setPromise = function(promise){ this.promise = promise; };
};

Hero.prototype.constructor = Hero;

Hero.prototype = {
  createSprite: function(){
    var sprite = game.add.sprite(290,210,ATLAS, "0.png");
    sprite.scale.setTo(2.0,2.75);
    this.setSprite(sprite);
  },
  animation: function(){
    var animation = this.getSprite().animations.add(HERO_ANIMATION,["0.png","1.png","2.png"],1, false);
    this.setAnimation(animation);
  },
  animationBack: function(){
    var animationBack = this.getSprite().animations.add(HERO_ANIMATION_BACK,["3.png"],1, false);
    animationBack.onStart.add(this.animationStarted, this);
    this.setAnimationBack(animationBack);
  },
  create: function() {
    this.createSprite();
    this.animation();
    this.animationBack();
  },
  animationStarted : function(sprite, _animation){
    this.setPromise(new Promise(function(resolved,rejected){ resolved(sprite); }) );
  }

};


////////////////////////////////////////////////////////////////////////////////////   BACKGROUND WALL

var Wall = function Wall(hero, logo, audio){
  this.WALL = "000.png";
  this.hero = hero;
  this.logo = logo;
  this.audio = audio;
  this.lock = false;

  this.getSprite = function(){ return this.sprite; };
  this.setSprite = function(sprite){ this.sprite = sprite; };

  this.getAnimation = function(){ return this.animation; };
  this.setAnimation = function(animation){ this.animation = animation; };

};

Wall.prototype.constructor = Wall;

Wall.prototype = {
  createSprite: function() {
    var sprite = game.add.sprite(0,0, ATLAS, this.WALL);
    sprite.scale.setTo(2.085,2.68);
    this.setSprite(sprite);
  },
  animations : function(){
    var animation = this.sprite.animations.add(WALL_ANIMATION,["000.png","001.png","002.png","003.png","004.png","005.png","006.png"],10, false);
    animation.onStart.add(this.wallAnimationStarted, this);
    animation.onComplete.add(this.wallAnimationCompleted, this);
    this.setAnimation(animation);
  },
  wallAnimationStarted : function(sprite, animation){
    this.audio.play();

    var animation = this.hero.getAnimation();
    animation.play(HERO_ANIMATION);
  },
  wallAnimationCompleted : function(sprite, animation){
    setTimeout(function(args){ 
      
      var logo = args[0].getSprite();
      logo.position = new Phaser.Point(game.world.centerX+15,game.world.centerY+50);
      logo.scale.setTo(0.2);
      logo.visible = true;
      
      var animationBack = args[1].getAnimationBack();
      animationBack.play(HERO_ANIMATION_BACK); 

    }, 2200, [this.logo,this.hero]);
  },
  create: function() {
    this.hero.create();
    this.createSprite();
    this.animations();
    this.logo.create();
  },
  update : function(){
    var promise = this.hero.getPromise();
    if(this.lock || promise == null )
      return;

    this.lock = true;
    var _this = this;

    promise.then(function(args){
      new Promise(function(resolved, rejected){

        _this.logo.animation(resolved);
      
      }).then(function(_args){
        
        setTimeout(function(_walk){
                var hero  = _walk.hero.getSprite();
                var walk = _walk.getSprite();
                hero.visible = false;
                walk.visible = false;
            }, 3300, _this);
        });

      });
  }
};


////////////////////////////////////////////////////////////////////////////////////   VIEW BACKGROUND BANNER

var Banner = function Banner( utils ){
  this.RESET = 15;
  this.timer = null;
  this.VICBOMA = "vicboma2016.png";  
  this.INSERT_COIN = "insertCoin.png";
  this.utils = utils;

  this.getVicboma = function(){ return this.vicboma; };
  this.setVicboma = function(vicboma){ this.vicboma = vicboma; };

  this.getInsertCoin = function(){ return this.insertCoin; };
  this.setInsertCoin = function(insertCoin){ this.insertCoin = insertCoin; };
};

Banner.prototype.constructor = Banner;

Banner.prototype = {
  create: function() {
    this.createVicboma();
    this.createInsertCoin();
  },
  createVicboma : function() {
    var vicboma = game.add.button(game.world.centerX-10, game.world.height - 15, ATLAS, this.utils.link, this, this.VICBOMA,this.VICBOMA,this.VICBOMA,this.VICBOMA);
    vicboma.anchor.set(0.5,1);
    this.setVicboma(vicboma);
  },
  createInsertCoin : function() {
    var insertCoin = game.add.button(game.world.centerX + 10, game.world.height - 85, ATLAS, this.utils.gitLink, this, this.INSERT_COIN,this.INSERT_COIN,this.INSERT_COIN,this.INSERT_COIN);
    insertCoin.anchor.set(0.5,1);
    this.setInsertCoin(insertCoin);
  },
  animationStarted : function(sprite, _animation){
    this.setPromise(new Promise(function(resolved,rejected){ resolved(sprite); }) );
  },
  update : function () {

    if(this.timer != null)
      return;

      var loops = 0;
      this.timer = game.time.create(false);
      this.timer.loop(1500, function(args) {  
            
            if(loops == this.RESET ){
              this.timer.stop();
              game.state.start(INTRO);
            }

            this.utils.toBlink(args); 
            loops++;

      }, this, this.getInsertCoin());

      this.timer.start();

  }

};

////////////////////////////////////////////////////////////////////////////////////   BANNER UTILS

var Utils = function Utils( ){
    game.scale.pageAlignHorizontally = true;
    game.scale.pageAlignVertically = true;  
    game.stage.backgroundColor = 0x000000;
};

Utils.prototype.constructor = Utils;

Utils.prototype = {
  link : function(){
    window.open("https://twitter.com/vicboma1", "_blank");
  },
  gitLink : function(){
    window.open("https://github.com/vicboma1/streetFighter1", "_blank");
  },
  toBlink : function(element){
    var tweenToBlinkOn = game.add.tween(element)
                                  .to(
                                      { alpha: 1 }, 
                                      10, 
                                      Phaser.Easing.Linear.None,
                                      true,
                                      700
                                    );

      tweenToBlinkOn.onComplete.addOnce(function(_element){
            tweenToBlinkOn.stop();
            game.tweens.remove(tweenToBlinkOn);

            var tweenToBlinkOff = game.add.tween(_element)
                                  .to(
                                      { alpha: 0 }, 
                                      10, 
                                      Phaser.Easing.Linear.None,
                                      true,
                                      700
                                    );

            tweenToBlinkOff.onComplete.addOnce(function(elem){
                  tweenToBlinkOff.stop();
                  game.tweens.remove(tweenToBlinkOff);
            }, this);
      }, this);
  },
};


////////////////////////////////////////////////////////////////////////////////////   CONTROLLER


var StreetFighter1 = function StreetFighter1() { 
}

StreetFighter1.prototype.constructor = StreetFighter1;

StreetFighter1.prototype = {
  preload: function (){
    this.banner = new Banner(new Utils());
   
    this.audio = new Audio();
    this.assets = new Assets(this.audio);

    this.wall =  new Wall(new Hero(), new Logo(), this.audio);
  },
  create: function() {
    this.assets.create();
    this.wall.create();
    this.banner.create();
  
    setTimeout(function(_this){ _this.soundDecoded(); }, 3000, this);              
  },  
  soundDecoded : function(){
    game.sound.setDecodedCallback(
          this.audio.getEffect(), function() {   
              this.wall.getAnimation().play(WALL_ANIMATION);
          }, this );
  },
  update: function() {
    this.wall.update();
    this.banner.update();
  },
  render : function(){
  },
  destroy: function() {
  }

};
